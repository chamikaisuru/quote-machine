{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Random Quote Machine\\\\quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteDb = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nfunction App() {\n  _s();\n  const [quote, setQuote] = useState('I didn’t fail the test. I just found 100 ways to do it wrong.');\n  const [author, setAuthor] = useState('Teddy Roosevelt');\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quoteArray, setQuoteArray] = useState(null);\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJson = await response.json();\n    setQuoteArray(parsedJson.quotes);\n    // console.log(parsedJson);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quoteDb);\n  }, [quoteDb]);\n  const generateRandomNumber = () => {\n    let randomInteger = Math.floor(quoteArray.length * Math.random());\n    setRandomNumber(randomInteger);\n    setQuote(quoteArray[randomInteger].quote);\n    setAuthor(quoteArray[randomInteger].author);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"randomNUmber: \", randomNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"text\",\n          children: [\"\\\"\", quote]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"author\",\n          children: [\"-\", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            id: \"tweet-quote\",\n            href: encodeURI(`https://twitter.com/compose/tweet?text=${quote}  - ${author}`),\n            children: \"twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: () => generateRandomNumber(),\n          children: \"Change Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"esjAwaKNSxNwS5G2V0h7w1MtQAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","quoteDb","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quoteArray","setQuoteArray","fetchQuotes","url","response","fetch","parsedJson","json","quotes","generateRandomNumber","randomInteger","Math","floor","length","random","encodeURI"],"sources":["C:/react/Random Quote Machine/quote-machine/src/App.js"],"sourcesContent":["import './App.scss';\nimport React, { useEffect, useState } from 'react';\n\nlet quoteDb = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n\n  const [quote, setQuote] = useState('I didn’t fail the test. I just found 100 ways to do it wrong.');\n  const [author, setAuthor] = useState('Teddy Roosevelt');\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quoteArray, setQuoteArray] = useState(null);\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url);\n    const parsedJson = await response.json();\n    setQuoteArray(parsedJson.quotes);\n    // console.log(parsedJson);\n\n  }\n\n  useEffect(() => {\n    fetchQuotes(quoteDb)\n  }, [quoteDb])\n\n  const generateRandomNumber = () => {\n    let randomInteger = Math.floor(quoteArray.length * Math.random());\n    setRandomNumber(randomInteger);\n    setQuote(quoteArray[randomInteger].quote);\n    setAuthor(quoteArray[randomInteger].author);\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header>\n        <div id='quote-box'>\n          <p>randomNUmber: {randomNumber}</p>\n          <p id='text'>\"{quote}</p>\n          <p id='author'>-{author}</p>\n          <button><a id='tweet-quote' href={encodeURI(`https://twitter.com/compose/tweet?text=${quote}  - ${author}`)}>twitter</a></button>\n          <button id='new-quote' onClick={() => generateRandomNumber()}>Change Quote</button>\n         \n          \n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,IAAIC,OAAO,GAAG,wIAAwI;AAEtJ,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,+DAA+D,CAAC;EACnG,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,iBAAiB,CAAC;EACvD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMW,WAAW,GAAG,MAAOC,GAAG,IAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACxCN,aAAa,CAACK,UAAU,CAACE,MAAM,CAAC;IAChC;EAEF,CAAC;;EAEDlB,SAAS,CAAC,MAAM;IACdY,WAAW,CAACV,OAAO,CAAC;EACtB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMiB,oBAAoB,GAAG,MAAM;IACjC,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACZ,UAAU,CAACa,MAAM,GAAGF,IAAI,CAACG,MAAM,EAAE,CAAC;IACjEf,eAAe,CAACW,aAAa,CAAC;IAC9Bf,QAAQ,CAACK,UAAU,CAACU,aAAa,CAAC,CAAChB,KAAK,CAAC;IACzCG,SAAS,CAACG,UAAU,CAACU,aAAa,CAAC,CAACd,MAAM,CAAC;EAE7C,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAElB;MAAA,uBACE;QAAK,EAAE,EAAC,WAAW;QAAA,wBACjB;UAAA,WAAG,gBAAc,EAACE,YAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACnC;UAAG,EAAE,EAAC,MAAM;UAAA,WAAC,IAAC,EAACJ,KAAK;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACzB;UAAG,EAAE,EAAC,QAAQ;UAAA,WAAC,GAAC,EAACE,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC5B;UAAA,uBAAQ;YAAG,EAAE,EAAC,aAAa;YAAC,IAAI,EAAEmB,SAAS,CAAE,0CAAyCrB,KAAM,OAAME,MAAO,EAAC,CAAE;YAAA,UAAC;UAAO;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS,eACjI;UAAQ,EAAE,EAAC,WAAW;UAAC,OAAO,EAAE,MAAMa,oBAAoB,EAAG;UAAA,UAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAG/E;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA3CQhB,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}