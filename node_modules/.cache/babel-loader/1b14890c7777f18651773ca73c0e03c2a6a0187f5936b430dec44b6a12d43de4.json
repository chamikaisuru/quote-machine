{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\Random Quote Machine\\\\quote-machine\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteDb = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nfunction App() {\n  _s();\n  const [quote, setQuote] = useState('I didn’t fail the test. I just found 100 ways to do it wrong.');\n  const [author, setAuthor] = useState('Teddy Roosevelt');\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quoteArray, setQuoteArray] = useState(null);\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJson = await response.json();\n    setQuoteArray(parsedJson.quotes);\n    console.log(parsedJson);\n  };\n  useEffect(() => {\n    fetchQuotes(quoteDb);\n  }, [quoteDb]);\n  const generateRandomNumber = () => {\n    let randomInteger = Math.floor(3 * Math.random());\n    setRandomNumber(randomInteger);\n    setQuote(quoteArray[randomInteger].quote);\n    setAuthor(quoteArray[randomInteger].author);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"randomNUmber: \", randomNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", quote]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"-\", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generateRandomNumber(),\n        children: \"Change Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"twitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"esjAwaKNSxNwS5G2V0h7w1MtQAg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","quoteDb","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quoteArray","setQuoteArray","fetchQuotes","url","response","fetch","parsedJson","json","quotes","console","log","generateRandomNumber","randomInteger","Math","floor","random"],"sources":["C:/react/Random Quote Machine/quote-machine/src/App.js"],"sourcesContent":["import './App.scss';\nimport React, { useEffect, useState } from 'react';\n\nlet quoteDb = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n\n  const [quote, setQuote] = useState('I didn’t fail the test. I just found 100 ways to do it wrong.');\n  const [author, setAuthor] = useState('Teddy Roosevelt');\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quoteArray, setQuoteArray] = useState(null);\n\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url);\n    const parsedJson = await response.json();\n    setQuoteArray(parsedJson.quotes);\n    console.log(parsedJson);\n\n  }\n\n  useEffect(() => {\n    fetchQuotes(quoteDb)\n  }, [quoteDb])\n\n  const generateRandomNumber = () => {\n    let randomInteger = Math.floor(3 * Math.random());\n    setRandomNumber(randomInteger);\n    setQuote(quoteArray[randomInteger].quote);\n    setAuthor(quoteArray[randomInteger].author);\n\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header>\n        <p>randomNUmber: {randomNumber}</p>\n        <p>\"{quote}</p>\n        <p>-{author}</p>\n        <button onClick={() => generateRandomNumber()}>Change Quote</button>\n        <div className=\"row\"><button>twitter</button></div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,IAAIC,OAAO,GAAG,wIAAwI;AAEtJ,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,+DAA+D,CAAC;EACnG,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,iBAAiB,CAAC;EACvD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMW,WAAW,GAAG,MAAOC,GAAG,IAAK;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,MAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACxCN,aAAa,CAACK,UAAU,CAACE,MAAM,CAAC;IAChCC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;EAEzB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdY,WAAW,CAACV,OAAO,CAAC;EACtB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMmB,oBAAoB,GAAG,MAAM;IACjC,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAE,CAAC;IACjDhB,eAAe,CAACa,aAAa,CAAC;IAC9BjB,QAAQ,CAACK,UAAU,CAACY,aAAa,CAAC,CAAClB,KAAK,CAAC;IACzCG,SAAS,CAACG,UAAU,CAACY,aAAa,CAAC,CAAChB,MAAM,CAAC;EAE7C,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAElB;MAAA,wBACE;QAAA,WAAG,gBAAc,EAACE,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACnC;QAAA,WAAG,IAAC,EAACJ,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACf;QAAA,WAAG,GAAC,EAACE,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAChB;QAAQ,OAAO,EAAE,MAAMe,oBAAoB,EAAG;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAS,eACpE;QAAK,SAAS,EAAC,KAAK;QAAA,uBAAC;UAAA,UAAQ;QAAO;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EAE5C;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAxCQlB,GAAG;AAAA,KAAHA,GAAG;AA0CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}